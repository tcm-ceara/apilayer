<?php


/**
 * This class defines the structure of the 'LICITACOES' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:58 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class LicitacoesTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.LicitacoesTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('LICITACOES');
		$this->setPhpName('Licitacoes');
		$this->setClassname('Licitacoes');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'COMISSOES_LICITACOES', 'CD_MUNICIPIO', true, 3, null);
		$this->addPrimaryKey('DT_REALIZACAO_LICIT_LI', 'DtRealizacaoLicitLi', 'TIMESTAMP', true, 16, null);
		$this->addPrimaryKey('NU_LICITACAO_LI', 'NuLicitacaoLi', 'VARCHAR', true, 15, null);
		$this->addColumn('HR_REALIZACAO_LI', 'HrRealizacaoLi', 'CHAR', true, 5, '(\' \')');
		$this->addColumn('DT_EMISSAO_EDITAL_LI', 'DtEmissaoEditalLi', 'TIMESTAMP', false, 16, null);
		$this->addColumn('MD_LICITACAO_LI', 'MdLicitacaoLi', 'CHAR', false, 1, null);
		$this->addColumn('TP_LICITACAO_LI', 'TpLicitacaoLi', 'CHAR', false, 1, null);
		$this->addColumn('DE_OBJETO_LICITACAO_LI1', 'DeObjetoLicitacaoLi1', 'VARCHAR', false, 255, null);
		$this->addColumn('DE_OBJETO_LICITACAO_LI2', 'DeObjetoLicitacaoLi2', 'VARCHAR', false, 255, null);
		$this->addColumn('VL_ORC_ESTIMADO_OBJ_LI', 'VlOrcEstimadoObjLi', 'DECIMAL', false, 21, null);
		$this->addColumn('VL_LIMITE_SUPERIOR_OBJ_LI', 'VlLimiteSuperiorObjLi', 'DECIMAL', false, 21, null);
		$this->addForeignKey('CD_CPF_GESTOR', 'CdCpfGestor', 'VARCHAR', 'COMISSOES_LICITACOES', 'CD_CPF_GESTOR', true, 11, null);
		$this->addForeignKey('DT_CRIAC_COMISSAO_CL', 'DtCriacComissaoCl', 'TIMESTAMP', 'COMISSOES_LICITACOES', 'DT_CRIAC_COMISSAO_CL', true, 16, null);
		$this->addForeignKey('NU_COMISSAO_LICIT_CL', 'NuComissaoLicitCl', 'CHAR', 'COMISSOES_LICITACOES', 'NU_COMISSAO_LICIT_CL', true, 2, null);
		$this->addForeignKey('CD_CPF_RESP_HOMOLOG_LI', 'CdCpfRespHomologLi', 'CHAR', 'DADOS_PESSOAIS', 'CD_CPF_SERV_MUNI', false, 11, null);
		$this->addColumn('NM_RESP_HOMOLOG_LI', 'NmRespHomologLi', 'VARCHAR', false, 40, null);
		$this->addColumn('DT_REALIZACAO_LICIT_PA', 'DtRealizacaoLicitPa', 'TIMESTAMP', false, 16, null);
		$this->addColumn('MD_PROCESSO_ADM_PA', 'MdProcessoAdmPa', 'CHAR', false, 1, null);
		$this->addColumn('CD_CPF_RESP_JURIDICO_PA', 'CdCpfRespJuridicoPa', 'CHAR', false, 11, null);
		$this->addColumn('NM_RESP_JURIDICO_PA', 'NmRespJuridicoPa', 'VARCHAR', false, 40, null);
		$this->addColumn('DT_HOMOLOGACAO_PA', 'DtHomologacaoPa', 'TIMESTAMP', false, 16, null);
		$this->addColumn('DE_JUSTIFICA_PRECO_PA1', 'DeJustificaPrecoPa1', 'VARCHAR', false, 255, null);
		$this->addColumn('DE_JUSTIFICA_PRECO_PA2', 'DeJustificaPrecoPa2', 'VARCHAR', false, 255, null);
		$this->addColumn('DE_MOTIVO_FORNEC_PA1', 'DeMotivoFornecPa1', 'VARCHAR', false, 255, null);
		$this->addColumn('DE_MOTIVO_FORNEC_PA2', 'DeMotivoFornecPa2', 'VARCHAR', false, 255, null);
		$this->addColumn('DE_FUND_LEGAL_PA', 'DeFundLegalPa', 'VARCHAR', false, 255, null);
		$this->addColumn('NM_ORGAO_ATA_PA', 'NmOrgaoAtaPa', 'VARCHAR', false, 255, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('DadosPessoais', 'DadosPessoais', RelationMap::MANY_TO_ONE, array('cd_cpf_resp_homolog_li' => 'cd_cpf_serv_muni', ), null, null);
    $this->addRelation('ComissoesLicitacoes', 'ComissoesLicitacoes', RelationMap::MANY_TO_ONE, array('cd_cpf_gestor' => 'cd_cpf_gestor', 'cd_municipio' => 'cd_municipio', 'dt_criac_comissao_cl' => 'dt_criac_comissao_cl', 'nu_comissao_licit_cl' => 'nu_comissao_licit_cl', ), null, null);
    $this->addRelation('DadosEmpenhos', 'DadosEmpenhos', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
    $this->addRelation('DotacoesLicitacoes', 'DotacoesLicitacoes', RelationMap::ONE_TO_MANY, array('dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
    $this->addRelation('ItensLicitacoes', 'ItensLicitacoes', RelationMap::ONE_TO_MANY, array('dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
    $this->addRelation('Licitantes', 'Licitantes', RelationMap::ONE_TO_MANY, array('dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
    $this->addRelation('PublicEditaisLicitacoes', 'PublicEditaisLicitacoes', RelationMap::ONE_TO_MANY, array('dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // LicitacoesTableMap
