<?php


/**
 * This class defines the structure of the 'notas_fiscais_del' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:23:02 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class NotasFiscaisDelTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.NotasFiscaisDelTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('notas_fiscais_del');
		$this->setPhpName('NotasFiscaisDel');
		$this->setClassname('NotasFiscaisDel');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addColumn('CD_MUNICIPIO', 'CdMunicipio', 'CHAR', true, 3, null);
		$this->addColumn('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER', true, 4, null);
		$this->addColumn('CD_ORGAO', 'CdOrgao', 'CHAR', true, 2, null);
		$this->addColumn('CD_UNID_ORC', 'CdUnidOrc', 'CHAR', true, 4, null);
		$this->addColumn('DT_EMISSAO_NE', 'DtEmissaoNe', 'TIMESTAMP', true, 16, null);
		$this->addColumn('NU_NOTA_EMPENHO', 'NuNotaEmpenho', 'VARCHAR', true, 8, null);
		$this->addColumn('DT_LIQUID_LIQ', 'DtLiquidLiq', 'TIMESTAMP', true, 16, null);
		$this->addColumn('TP_NF', 'TpNf', 'CHAR', true, 1, null);
		$this->addColumn('NU_NF', 'NuNf', 'VARCHAR', true, 8, null);
		$this->addColumn('DT_REF_NF', 'DtRefNf', 'INTEGER', true, 4, null);
		$this->addColumn('NU_SERIE_TRANS_NF', 'NuSerieTransNf', 'CHAR', false, 2, null);
		$this->addColumn('NU_SELO_TRANS_NF', 'NuSeloTransNf', 'CHAR', false, 10, null);
		$this->addColumn('NU_SERIE_NF', 'NuSerieNf', 'CHAR', false, 10, null);
		$this->addColumn('NU_FORMULARIO_NF', 'NuFormularioNf', 'VARCHAR', false, 255, null);
		$this->addColumn('DT_LIMITE_NF', 'DtLimiteNf', 'TIMESTAMP', false, 16, null);
		$this->addColumn('NU_CGF_EMITENTE_NF', 'NuCgfEmitenteNf', 'VARCHAR', false, 16, null);
		$this->addColumn('CD_UF_EMITENTE_NF', 'CdUfEmitenteNf', 'CHAR', true, 2, null);
		$this->addColumn('DT_EMISSAO_NF', 'DtEmissaoNf', 'TIMESTAMP', true, 16, null);
		$this->addColumn('VL_LIQ_NF', 'VlLiqNf', 'DECIMAL', true, 21, null);
		$this->addColumn('VL_DESC_NF', 'VlDescNf', 'DECIMAL', true, 21, null);
		$this->addColumn('VL_BRUTO_NF', 'VlBrutoNf', 'DECIMAL', true, 21, null);
		$this->addColumn('VL_ALIQUOTA_ISS_NF', 'VlAliquotaIssNf', 'DECIMAL', false, 20, null);
		$this->addColumn('VL_BASECALC_ISS_NF', 'VlBasecalcIssNf', 'DECIMAL', false, 21, null);
		$this->addColumn('TP_EMISSAO_NF', 'TpEmissaoNf', 'TINYINT', false, 1, null);
		$this->addColumn('NU_PROTOC_AUTEN_NFE_NF', 'NuProtocAutenNfeNf', 'DECIMAL', false, 20, null);
		$this->addColumn('NU_CHAVE_ACESSO_NFE_NF', 'NuChaveAcessoNfeNf', 'CHAR', false, 44, null);
		$this->addColumn('CD_VERIFICA_NFE_FPN_NF', 'CdVerificaNfeFpnNf', 'VARCHAR', false, 50, null);
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // NotasFiscaisDelTableMap
