<?php


/**
 * This class defines the structure of the 'GEST_SUBSTITUTOS' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:55 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class GestSubstitutosTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.GestSubstitutosTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('GEST_SUBSTITUTOS');
		$this->setPhpName('GestSubstitutos');
		$this->setClassname('GestSubstitutos');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'DADOS_GESTAO', 'CD_MUNICIPIO', true, 3, null);
		$this->addPrimaryKey('CD_CPF_GESTOR', 'CdCpfGestor', 'VARCHAR', true, 11, null);
		$this->addForeignPrimaryKey('DT_INI_GESTAO', 'DtIniGestao', 'TIMESTAMP' , 'DADOS_GESTAO', 'DT_INI_GESTAO', true, 16, null);
		$this->addPrimaryKey('DT_INI_GEST_SUBSTIT', 'DtIniGestSubstit', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_FIM_GEST_SUBSTIT', 'DtFimGestSubstit', 'TIMESTAMP', false, 16, null);
		$this->addColumn('TP_SUBSTITUICAO_GEST', 'TpSubstituicaoGest', 'CHAR', false, 1, null);
		$this->addColumn('DE_MOTIVO_SUBSTIT_GEST', 'DeMotivoSubstitGest', 'VARCHAR', false, 255, null);
		$this->addColumn('NU_CPF_GEST_SUBSTIT', 'NuCpfGestSubstit', 'VARCHAR', false, 11, null);
		$this->addColumn('NM_GEST_SUBSTIT', 'NmGestSubstit', 'VARCHAR', false, 40, null);
		$this->addColumn('DE_ENDER_GEST_SUBSTIT', 'DeEnderGestSubstit', 'VARCHAR', false, 255, null);
		$this->addColumn('NU_CEP_GEST_SUBSTIT', 'NuCepGestSubstit', 'CHAR', false, 8, null);
		$this->addColumn('NU_TELEFONE_GEST_SUBSTIT', 'NuTelefoneGestSubstit', 'CHAR', false, 11, null);
		$this->addColumn('DE_EMAIL_GEST_SUBSTIT', 'DeEmailGestSubstit', 'VARCHAR', false, 50, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('DadosGestao', 'DadosGestao', RelationMap::MANY_TO_ONE, array('cd_municipio' => 'cd_municipio', 'dt_ini_gestao' => 'dt_ini_gestao', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // GestSubstitutosTableMap
