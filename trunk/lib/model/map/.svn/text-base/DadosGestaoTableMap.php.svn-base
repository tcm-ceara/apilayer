<?php


/**
 * This class defines the structure of the 'DADOS_GESTAO' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:45 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class DadosGestaoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.DadosGestaoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('DADOS_GESTAO');
		$this->setPhpName('DadosGestao');
		$this->setClassname('DadosGestao');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'GESTORES', 'CD_MUNICIPIO', true, 3, null);
		$this->addPrimaryKey('CD_CPF_GESTOR', 'CdCpfGestor', 'VARCHAR', true, 11, null);
		$this->addPrimaryKey('DT_INI_GESTAO', 'DtIniGestao', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_FIM_GESTAO', 'DtFimGestao', 'TIMESTAMP', false, 16, null);
		$this->addColumn('DT_ATO_NOMEACAO_GESTOR', 'DtAtoNomeacaoGestor', 'TIMESTAMP', false, 16, null);
		$this->addColumn('NU_ATO_NOMEACAO_GESTOR', 'NuAtoNomeacaoGestor', 'VARCHAR', false, 10, null);
		$this->addColumn('DT_PUBLIC_NOMEACAO_GESTOR', 'DtPublicNomeacaoGestor', 'TIMESTAMP', false, 16, null);
		$this->addColumn('DE_DELEG_COMPET_GESTOR', 'DeDelegCompetGestor', 'VARCHAR', false, 255, null);
		$this->addColumn('NU_MATRICULA_GESTOR', 'NuMatriculaGestor', 'VARCHAR', false, 15, null);
		$this->addColumn('DE_PARTIDO_GESTOR', 'DePartidoGestor', 'VARCHAR', false, 35, null);
		$this->addForeignKey('CD_TIPO_CARGO', 'CdTipoCargo', 'CHAR', 'TIPOS_CARGOS', 'CD_TIPO_CARGO', true, 2, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Gestores', 'Gestores', RelationMap::MANY_TO_ONE, array('cd_municipio' => 'cd_municipio', ), null, null);
    $this->addRelation('TiposCargos', 'TiposCargos', RelationMap::MANY_TO_ONE, array('cd_tipo_cargo' => 'cd_tipo_cargo', ), null, null);
    $this->addRelation('GestSubstitutos', 'GestSubstitutos', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_gestao' => 'dt_ini_gestao', ), null, null);
    $this->addRelation('UnidadesGestoras', 'UnidadesGestoras', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_gestao' => 'dt_ini_gestao', ), null, null);
    $this->addRelation('VicePrefeitos', 'VicePrefeitos', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_gestao' => 'dt_ini_gestao', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // DadosGestaoTableMap
