<?php


/**
 * This class defines the structure of the 'DADOS_PESSOAIS' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:46 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class DadosPessoaisTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.DadosPessoaisTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('DADOS_PESSOAIS');
		$this->setPhpName('DadosPessoais');
		$this->setClassname('DadosPessoais');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addPrimaryKey('CD_CPF_SERV_MUNI', 'CdCpfServMuni', 'CHAR', true, 11, null);
		$this->addColumn('NU_IDENTIDADE_DS', 'NuIdentidadeDs', 'CHAR', true, 13, null);
		$this->addColumn('DE_EXPED_IDENT_DS', 'DeExpedIdentDs', 'CHAR', true, 10, null);
		$this->addColumn('NU_TIT_ELEITOR_DS', 'NuTitEleitorDs', 'CHAR', false, 15, null);
		$this->addColumn('CD_EST_CIVIL', 'CdEstCivil', 'CHAR', true, 1, null);
		$this->addForeignKey('CD_INSTRUCAO', 'CdInstrucao', 'CHAR', 'GRAUS_INSTRUCAO', 'CD_INSTRUCAO', true, 1, null);
		$this->addColumn('CD_SEXO_DS', 'CdSexoDs', 'CHAR', true, 1, null);
		$this->addColumn('NM_SERV_MUNI_DS', 'NmServMuniDs', 'VARCHAR', true, 40, null);
		$this->addColumn('NM_MAE_SERV_MUNI_DS', 'NmMaeServMuniDs', 'VARCHAR', true, 40, null);
		$this->addColumn('NM_PAI_SERV_MUNI_DS', 'NmPaiServMuniDs', 'VARCHAR', false, 40, null);
		$this->addColumn('DE_ENDERECO_DS', 'DeEnderecoDs', 'VARCHAR', false, 255, null);
		$this->addColumn('NU_FONE_DS', 'NuFoneDs', 'VARCHAR', false, 11, null);
		$this->addColumn('DT_NASCIM_DS', 'DtNascimDs', 'TIMESTAMP', true, 16, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('GrausInstrucao', 'GrausInstrucao', RelationMap::MANY_TO_ONE, array('cd_instrucao' => 'cd_instrucao', ), null, null);
    $this->addRelation('Licitacoes', 'Licitacoes', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_resp_homolog_li', ), null, null);
    $this->addRelation('NotasPagamentos', 'NotasPagamentos', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_resp_pag_np', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // DadosPessoaisTableMap
