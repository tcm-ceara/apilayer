<?php


/**
 * This class defines the structure of the 'LICITANTES' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:59 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class LicitantesTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.LicitantesTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('LICITANTES');
		$this->setPhpName('Licitantes');
		$this->setClassname('Licitantes');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR', true, 3, null);
		$this->addForeignPrimaryKey('DT_REALIZACAO_LICIT_LI', 'DtRealizacaoLicitLi', 'TIMESTAMP' , 'LICITACOES', 'DT_REALIZACAO_LICIT_LI', true, 16, null);
		$this->addForeignPrimaryKey('NU_LICITACAO_LI', 'NuLicitacaoLi', 'VARCHAR' , 'LICITACOES', 'NU_LICITACAO_LI', true, 15, null);
		$this->addForeignPrimaryKey('NU_DOC_NG', 'NuDocNg', 'VARCHAR' , 'NEGOCIANTES', 'NU_DOC_NG', true, 25, null);
		$this->addColumn('CD_TIPO_NG', 'CdTipoNg', 'CHAR', false, 1, '(\' \')');
		$this->addColumn('NM_NEGOCIANTE_NG', 'NmNegocianteNg', 'VARCHAR', false, 80, '(\' \')');
		$this->addColumn('DE_ENDERECO_NG', 'DeEnderecoNg', 'VARCHAR', false, 255, '(\' \')');
		$this->addColumn('NU_FONE_NG', 'NuFoneNg', 'VARCHAR', false, 11, '(\' \')');
		$this->addColumn('NU_CEP_NG', 'NuCepNg', 'CHAR', false, 8, '(\' \')');
		$this->addColumn('NM_MUNICIPIO_NG', 'NmMunicipioNg', 'VARCHAR', false, 40, '(\' \')');
		$this->addForeignKey('CD_UF_NF', 'CdUfNf', 'CHAR', 'UNIDADES_FEDERACAO', 'CD_SIGLA_UF', false, 2, '(\' \')');
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Negociantes', 'Negociantes', RelationMap::MANY_TO_ONE, array('nu_doc_ng' => 'nu_doc_ng', ), null, null);
    $this->addRelation('UnidadesFederacao', 'UnidadesFederacao', RelationMap::MANY_TO_ONE, array('cd_uf_nf' => 'cd_sigla_uf', ), null, null);
    $this->addRelation('Licitacoes', 'Licitacoes', RelationMap::MANY_TO_ONE, array('dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
    $this->addRelation('ItensLicitacoes', 'ItensLicitacoes', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_realizacao_licit_li' => 'dt_realizacao_licit_li', 'nu_doc_ng' => 'nu_doc_ng', 'nu_licitacao_li' => 'nu_licitacao_li', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // LicitantesTableMap
