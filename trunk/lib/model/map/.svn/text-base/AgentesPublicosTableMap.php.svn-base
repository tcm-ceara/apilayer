<?php


/**
 * This class defines the structure of the 'AGENTES_PUBLICOS' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:33 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class AgentesPublicosTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.AgentesPublicosTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('AGENTES_PUBLICOS');
		$this->setPhpName('AgentesPublicos');
		$this->setClassname('AgentesPublicos');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'SERVIDORES', 'CD_MUNICIPIO', true, 3, null);
		$this->addForeignPrimaryKey('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER' , 'SERVIDORES', 'DT_VERSAO_ORC', true, 4, null);
		$this->addForeignPrimaryKey('CD_ORGAO', 'CdOrgao', 'CHAR' , 'SERVIDORES', 'CD_ORGAO', true, 2, null);
		$this->addForeignPrimaryKey('CD_UNID_ORC', 'CdUnidOrc', 'CHAR' , 'SERVIDORES', 'CD_UNID_ORC', true, 4, null);
		$this->addPrimaryKey('CD_CPF_SERV_MUNI', 'CdCpfServMuni', 'CHAR', true, 11, null);
		$this->addForeignPrimaryKey('CD_INGRESSO', 'CdIngresso', 'CHAR' , 'TIPOS_INGRESSOS', 'CD_INGRESSO', true, 1, null);
		$this->addForeignPrimaryKey('CD_VINCULO', 'CdVinculo', 'CHAR' , 'VINCULOS', 'CD_VINCULO', true, 1, null);
		$this->addPrimaryKey('NU_EXPEDIENTE_NO', 'NuExpedienteNo', 'VARCHAR', true, 10, null);
		$this->addForeignKey('CD_EXPEDIENTE', 'CdExpediente', 'CHAR', 'TIPOS_EXPEDIENTES', 'CD_EXPEDIENTE', true, 1, null);
		$this->addColumn('DT_EXPEDIENTE_AP', 'DtExpedienteAp', 'TIMESTAMP', true, 16, null);
		$this->addForeignKey('CD_AMPARO_LEGAL', 'CdAmparoLegal', 'CHAR', 'TIPOS_AMPAROS_LEGAIS', 'CD_AMPARO_LEGAL', true, 1, null);
		$this->addColumn('NU_AMPARO_LEGAL_AP', 'NuAmparoLegalAp', 'VARCHAR', true, 10, null);
		$this->addColumn('DT_AMPARO_LEGAL_AP', 'DtAmparoLegalAp', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_PUBLIC_AMPARO_AP', 'DtPublicAmparoAp', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_POSSE_AP', 'DtPosseAp', 'TIMESTAMP', true, 16, null);
		$this->addColumn('NU_MATRICULA_MUNI_AP', 'NuMatriculaMuniAp', 'VARCHAR', true, 15, null);
		$this->addForeignKey('CD_SIT_FUNCIONAL', 'CdSitFuncional', 'CHAR', 'SIT_FUNCIONAIS', 'CD_SIT_FUNCIONAL', true, 1, null);
		$this->addForeignKey('CD_REGIME_JURIDICO', 'CdRegimeJuridico', 'CHAR', 'REGIMES_JURIDICOS', 'CD_REGIME_JURIDICO', true, 1, null);
		$this->addColumn('CD_REGIME_PREV_AP', 'CdRegimePrevAp', 'CHAR', true, 1, null);
		$this->addForeignKey('CD_OCUP_CBO', 'CdOcupCbo', 'CHAR', 'CBO_MUNICIPAIS', 'CD_OCUP_CBOM', true, 6, null);
		$this->addForeignKey('CD_TIPO_CARGO', 'CdTipoCargo', 'CHAR', 'TIPOS_CARGOS', 'CD_TIPO_CARGO', true, 2, null);
		$this->addColumn('VL_CARGA_HORARIA', 'VlCargaHoraria', 'TINYINT', false, 1, null);
		$this->addColumn('NU_DEPENDENTES_AP', 'NuDependentesAp', 'TINYINT', false, 1, null);
		$this->addColumn('DT_REF_AP', 'DtRefAp', 'INTEGER', false, 4, null);
		$this->addColumn('NM_SERV_MUNI_DS', 'NmServMuniDs', 'VARCHAR', false, 40, null);
		$this->addColumn('TP_PROGRAMA_SOCIAL_AP', 'TpProgramaSocialAp', 'TINYINT', false, 1, null);
		$this->addColumn('CD_PROGRAMA_SOCIAL_AP', 'CdProgramaSocialAp', 'VARCHAR', false, 11, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('TiposIngressos', 'TiposIngressos', RelationMap::MANY_TO_ONE, array('cd_ingresso' => 'cd_ingresso', ), null, null);
    $this->addRelation('Vinculos', 'Vinculos', RelationMap::MANY_TO_ONE, array('cd_vinculo' => 'cd_vinculo', ), null, null);
    $this->addRelation('TiposExpedientes', 'TiposExpedientes', RelationMap::MANY_TO_ONE, array('cd_expediente' => 'cd_expediente', ), null, null);
    $this->addRelation('TiposAmparosLegais', 'TiposAmparosLegais', RelationMap::MANY_TO_ONE, array('cd_amparo_legal' => 'cd_amparo_legal', ), null, null);
    $this->addRelation('SitFuncionais', 'SitFuncionais', RelationMap::MANY_TO_ONE, array('cd_sit_funcional' => 'cd_sit_funcional', ), null, null);
    $this->addRelation('RegimesJuridicos', 'RegimesJuridicos', RelationMap::MANY_TO_ONE, array('cd_regime_juridico' => 'cd_regime_juridico', ), null, null);
    $this->addRelation('CboMunicipais', 'CboMunicipais', RelationMap::MANY_TO_ONE, array('cd_ocup_cbo' => 'cd_ocup_cbom', ), null, null);
    $this->addRelation('TiposCargos', 'TiposCargos', RelationMap::MANY_TO_ONE, array('cd_tipo_cargo' => 'cd_tipo_cargo', ), null, null);
    $this->addRelation('Servidores', 'Servidores', RelationMap::MANY_TO_ONE, array('cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'dt_versao_orc' => 'dt_versao_orc', ), null, null);
    $this->addRelation('ConcessoesItens', 'ConcessoesItens', RelationMap::ONE_TO_MANY, array('cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('Desligamentos', 'Desligamentos', RelationMap::ONE_TO_MANY, array('cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('GestoresUg', 'GestoresUg', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('GestoresUnidOrc', 'GestoresUnidOrc', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('Ordenadores', 'Ordenadores', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('ReavalBaixasBens', 'ReavalBaixasBens', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
    $this->addRelation('UnidOrcBens', 'UnidOrcBens', RelationMap::ONE_TO_MANY, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // AgentesPublicosTableMap
