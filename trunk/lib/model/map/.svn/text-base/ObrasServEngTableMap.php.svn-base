<?php


/**
 * This class defines the structure of the 'OBRAS_SERV_ENG' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:23:04 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ObrasServEngTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ObrasServEngTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('OBRAS_SERV_ENG');
		$this->setPhpName('ObrasServEng');
		$this->setClassname('ObrasServEng');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR', true, 3, null);
		$this->addPrimaryKey('DT_INI_OBRA_SRV', 'DtIniObraSrv', 'TIMESTAMP', true, 16, null);
		$this->addPrimaryKey('TP_OBRA_SRV', 'TpObraSrv', 'CHAR', true, 1, null);
		$this->addPrimaryKey('NU_OBRA_SRV', 'NuObraSrv', 'SMALLINT', true, 2, null);
		$this->addColumn('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER', true, 4, null);
		$this->addColumn('CD_ORGAO', 'CdOrgao', 'CHAR', true, 2, null);
		$this->addColumn('CD_UNID_ORC', 'CdUnidOrc', 'CHAR', true, 4, null);
		$this->addColumn('DE_DESCRICAO_OBRA_SRV1', 'DeDescricaoObraSrv1', 'VARCHAR', true, 255, null);
		$this->addColumn('DE_DESCRICAO_OBRA_SRV2', 'DeDescricaoObraSrv2', 'VARCHAR', true, 255, null);
		$this->addColumn('TP_EXECUCAO_OBRA_SRV', 'TpExecucaoObraSrv', 'CHAR', true, 1, null);
		$this->addColumn('DT_FIM_OBRA_SRV', 'DtFimObraSrv', 'TIMESTAMP', false, 16, null);
		$this->addColumn('VL_TOT_OBRA_SRV', 'VlTotObraSrv', 'DECIMAL', false, 21, null);
		$this->addColumn('RG_CREA_OBRA_SRV', 'RgCreaObraSrv', 'VARCHAR', false, 25, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('ContratosObras', 'ContratosObras', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_obra_srv' => 'dt_ini_obra_srv', 'nu_obra_srv' => 'nu_obra_srv', 'tp_obra_srv' => 'tp_obra_srv', ), null, null);
    $this->addRelation('EmpenhosObras', 'EmpenhosObras', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_obra_srv' => 'dt_ini_obra_srv', 'nu_obra_srv' => 'nu_obra_srv', 'tp_obra_srv' => 'tp_obra_srv', ), null, null);
    $this->addRelation('RespEngenObras', 'RespEngenObras', RelationMap::ONE_TO_MANY, array('cd_municipio' => 'cd_municipio', 'dt_ini_obra_srv' => 'dt_ini_obra_srv', 'nu_obra_srv' => 'nu_obra_srv', 'tp_obra_srv' => 'tp_obra_srv', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ObrasServEngTableMap
