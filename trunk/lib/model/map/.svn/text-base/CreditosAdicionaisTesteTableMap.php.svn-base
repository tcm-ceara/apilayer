<?php


/**
 * This class defines the structure of the 'CREDITOS_ADICIONAIS_TESTE' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:44 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class CreditosAdicionaisTesteTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.CreditosAdicionaisTesteTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('CREDITOS_ADICIONAIS_TESTE');
		$this->setPhpName('CreditosAdicionaisTeste');
		$this->setClassname('CreditosAdicionaisTeste');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR', true, 3, null);
		$this->addPrimaryKey('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER', true, 4, null);
		$this->addPrimaryKey('DT_ABERT_CRED_CA', 'DtAbertCredCa', 'TIMESTAMP', true, 16, null);
		$this->addPrimaryKey('NU_SEQ_NO_DIA_CA', 'NuSeqNoDiaCa', 'TINYINT', true, 1, null);
		$this->addColumn('CD_ORGAO', 'CdOrgao', 'CHAR', false, 2, null);
		$this->addColumn('CD_UNID_ORC', 'CdUnidOrc', 'CHAR', false, 4, null);
		$this->addColumn('CD_FUNCAO', 'CdFuncao', 'CHAR', false, 2, null);
		$this->addColumn('CD_SUBFUNCAO', 'CdSubfuncao', 'CHAR', false, 3, null);
		$this->addColumn('CD_PROGRAMA', 'CdPrograma', 'CHAR', false, 4, null);
		$this->addColumn('CD_PROJ_ATIV', 'CdProjAtiv', 'CHAR', false, 1, null);
		$this->addColumn('NU_PROJ_ATIV', 'NuProjAtiv', 'CHAR', false, 3, null);
		$this->addColumn('NU_SUB_PROJ_ATIV', 'NuSubProjAtiv', 'CHAR', false, 4, null);
		$this->addColumn('CD_ELEMENTO_OD', 'CdElementoOd', 'CHAR', false, 8, null);
		$this->addColumn('DT_REF_CA', 'DtRefCa', 'INTEGER', false, 4, null);
		$this->addColumn('NU_LEI_CA', 'NuLeiCa', 'VARCHAR', false, 10, null);
		$this->addColumn('NU_DECRETO_CA', 'NuDecretoCa', 'VARCHAR', false, 10, null);
		$this->addColumn('TP_ABERTURA_CREDITO_CA', 'TpAberturaCreditoCa', 'CHAR', false, 1, null);
		$this->addColumn('CD_FONTE_RECURSOS_CA', 'CdFonteRecursosCa', 'VARCHAR', false, 4, null);
		$this->addColumn('VL_CRED_SUPER_CA', 'VlCredSuperCa', 'DECIMAL', false, 21, null);
		$this->addColumn('VL_CRED_EXCES_CA', 'VlCredExcesCa', 'DECIMAL', false, 21, null);
		$this->addColumn('VL_CRED_OPER_CA', 'VlCredOperCa', 'DECIMAL', false, 21, null);
		$this->addColumn('VL_CRED_ANUL_CA', 'VlCredAnulCa', 'DECIMAL', false, 21, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // CreditosAdicionaisTesteTableMap
