<?php


/**
 * This class defines the structure of the 'AGENTES_FOLHAS' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:31 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class AgentesFolhasTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.AgentesFolhasTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('AGENTES_FOLHAS');
		$this->setPhpName('AgentesFolhas');
		$this->setClassname('AgentesFolhas');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'CONCESSOES_ITENS', 'CD_MUNICIPIO', true, 3, null);
		$this->addForeignPrimaryKey('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER' , 'FOLHAS_PAGAMENTOS', 'DT_VERSAO_ORC', true, 4, null);
		$this->addForeignPrimaryKey('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER' , 'CONCESSOES_ITENS', 'DT_VERSAO_ORC', true, 4, null);
		$this->addForeignPrimaryKey('CD_ORGAO', 'CdOrgao', 'CHAR' , 'FOLHAS_PAGAMENTOS', 'CD_ORGAO', true, 2, null);
		$this->addForeignPrimaryKey('CD_ORGAO', 'CdOrgao', 'CHAR' , 'CONCESSOES_ITENS', 'CD_ORGAO', true, 2, null);
		$this->addForeignPrimaryKey('CD_UNID_ORC', 'CdUnidOrc', 'CHAR' , 'FOLHAS_PAGAMENTOS', 'CD_UNID_ORC', true, 4, null);
		$this->addForeignPrimaryKey('CD_UNID_ORC', 'CdUnidOrc', 'CHAR' , 'CONCESSOES_ITENS', 'CD_UNID_ORC', true, 4, null);
		$this->addForeignPrimaryKey('DT_COMPET_FL', 'DtCompetFl', 'INTEGER' , 'FOLHAS_PAGAMENTOS', 'DT_COMPET_FL', true, 4, null);
		$this->addForeignPrimaryKey('TP_FOLHA', 'TpFolha', 'CHAR' , 'FOLHAS_PAGAMENTOS', 'TP_FOLHA', true, 2, null);
		$this->addForeignPrimaryKey('DT_EMISSAO_FL', 'DtEmissaoFl', 'TIMESTAMP' , 'FOLHAS_PAGAMENTOS', 'DT_EMISSAO_FL', true, 16, null);
		$this->addForeignPrimaryKey('CD_CPF_SERV_MUNI', 'CdCpfServMuni', 'CHAR' , 'CONCESSOES_ITENS', 'CD_CPF_SERV_MUNI', true, 11, null);
		$this->addForeignPrimaryKey('CD_INGRESSO', 'CdIngresso', 'CHAR' , 'CONCESSOES_ITENS', 'CD_INGRESSO', true, 1, null);
		$this->addForeignPrimaryKey('CD_VINCULO', 'CdVinculo', 'CHAR' , 'CONCESSOES_ITENS', 'CD_VINCULO', true, 1, null);
		$this->addForeignPrimaryKey('NU_EXPEDIENTE_NO', 'NuExpedienteNo', 'VARCHAR' , 'CONCESSOES_ITENS', 'NU_EXPEDIENTE_NO', true, 10, null);
		$this->addForeignPrimaryKey('CD_ITEM_IR', 'CdItemIr', 'SMALLINT' , 'CONCESSOES_ITENS', 'CD_ITEM_IR', true, 2, null);
		$this->addColumn('VL_ITEM_AF', 'VlItemAf', 'DECIMAL', true, 21, null);
		$this->addColumn('TP_CLASSIFICACAO_AF', 'TpClassificacaoAf', 'CHAR', true, 1, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('FolhasPagamentos', 'FolhasPagamentos', RelationMap::MANY_TO_ONE, array('cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'dt_compet_fl' => 'dt_compet_fl', 'dt_emissao_fl' => 'dt_emissao_fl', 'dt_versao_orc' => 'dt_versao_orc', 'tp_folha' => 'tp_folha', ), null, null);
    $this->addRelation('ConcessoesItens', 'ConcessoesItens', RelationMap::MANY_TO_ONE, array('cd_cpf_serv_muni' => 'cd_cpf_serv_muni', 'cd_ingresso' => 'cd_ingresso', 'cd_item_ir' => 'cd_item_ir', 'cd_municipio' => 'cd_municipio', 'cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'cd_vinculo' => 'cd_vinculo', 'dt_versao_orc' => 'dt_versao_orc', 'nu_expediente_no' => 'nu_expediente_no', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // AgentesFolhasTableMap
