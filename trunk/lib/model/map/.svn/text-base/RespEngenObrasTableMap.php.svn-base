<?php


/**
 * This class defines the structure of the 'RESP_ENGEN_OBRAS' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:23:12 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class RespEngenObrasTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.RespEngenObrasTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('RESP_ENGEN_OBRAS');
		$this->setPhpName('RespEngenObras');
		$this->setClassname('RespEngenObras');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addForeignPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR' , 'OBRAS_SERV_ENG', 'CD_MUNICIPIO', true, 3, null);
		$this->addForeignPrimaryKey('DT_INI_OBRA_SRV', 'DtIniObraSrv', 'TIMESTAMP' , 'OBRAS_SERV_ENG', 'DT_INI_OBRA_SRV', true, 16, null);
		$this->addForeignPrimaryKey('TP_OBRA_SRV', 'TpObraSrv', 'CHAR' , 'OBRAS_SERV_ENG', 'TP_OBRA_SRV', true, 1, null);
		$this->addForeignPrimaryKey('NU_OBRA_SRV', 'NuObraSrv', 'SMALLINT' , 'OBRAS_SERV_ENG', 'NU_OBRA_SRV', true, 2, null);
		$this->addForeignPrimaryKey('NU_RG_CREA_ENG', 'NuRgCreaEng', 'VARCHAR' , 'ENGENHEIROS', 'NU_RG_CREA_ENG', true, 15, null);
		$this->addPrimaryKey('DT_INI_RESP_ENG_OB', 'DtIniRespEngOb', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_FIM_RESP_ENG_OB', 'DtFimRespEngOb', 'TIMESTAMP', false, 16, null);
		$this->addColumn('NM_ENGENHEIRO_ENG', 'NmEngenheiroEng', 'VARCHAR', false, 40, '(\' \')');
		$this->addColumn('CD_CPF_ENG', 'CdCpfEng', 'VARCHAR', false, 11, '(\' \')');
		$this->addColumn('NU_CGC_EMPRESA_EE', 'NuCgcEmpresaEe', 'VARCHAR', false, 14, null);
		$this->addColumn('NM_EMPRESA_EE', 'NmEmpresaEe', 'VARCHAR', false, 80, '(\' \')');
		$this->addColumn('NU_RG_CREA_EE', 'NuRgCreaEe', 'VARCHAR', false, 25, '(\' \')');
		$this->addColumn('NU_FONE_EE', 'NuFoneEe', 'CHAR', false, 11, '(\' \')');
		$this->addColumn('DE_ENDER_EE', 'DeEnderEe', 'VARCHAR', false, 255, '(\' \')');
		$this->addColumn('NU_CEP_EE', 'NuCepEe', 'CHAR', false, 8, '(\' \')');
		$this->addColumn('NM_MUNICIPIO_EE', 'NmMunicipioEe', 'VARCHAR', false, 30, '(\' \')');
		$this->addForeignKey('CD_UF_EE', 'CdUfEe', 'CHAR', 'UNIDADES_FEDERACAO', 'CD_SIGLA_UF', false, 2, '(\' \')');
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Engenheiros', 'Engenheiros', RelationMap::MANY_TO_ONE, array('nu_rg_crea_eng' => 'nu_rg_crea_eng', ), null, null);
    $this->addRelation('UnidadesFederacao', 'UnidadesFederacao', RelationMap::MANY_TO_ONE, array('cd_uf_ee' => 'cd_sigla_uf', ), null, null);
    $this->addRelation('ObrasServEng', 'ObrasServEng', RelationMap::MANY_TO_ONE, array('cd_municipio' => 'cd_municipio', 'dt_ini_obra_srv' => 'dt_ini_obra_srv', 'nu_obra_srv' => 'nu_obra_srv', 'tp_obra_srv' => 'tp_obra_srv', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // RespEngenObrasTableMap
