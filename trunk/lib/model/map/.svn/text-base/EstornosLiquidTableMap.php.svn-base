<?php


/**
 * This class defines the structure of the 'ESTORNOS_LIQUID' table.
 *
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Thu Jul 15 18:22:53 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class EstornosLiquidTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.EstornosLiquidTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('ESTORNOS_LIQUID');
		$this->setPhpName('EstornosLiquid');
		$this->setClassname('EstornosLiquid');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(false);
		// columns
		$this->addPrimaryKey('CD_MUNICIPIO', 'CdMunicipio', 'CHAR', true, 3, null);
		$this->addForeignPrimaryKey('DT_VERSAO_ORC', 'DtVersaoOrc', 'INTEGER' , 'NOTAS_FISCAIS_LIQUID', 'DT_VERSAO_ORC', true, 4, null);
		$this->addForeignPrimaryKey('CD_ORGAO', 'CdOrgao', 'CHAR' , 'NOTAS_FISCAIS_LIQUID', 'CD_ORGAO', true, 2, null);
		$this->addForeignPrimaryKey('CD_UNID_ORC', 'CdUnidOrc', 'CHAR' , 'NOTAS_FISCAIS_LIQUID', 'CD_UNID_ORC', true, 4, null);
		$this->addForeignPrimaryKey('DT_EMISSAO_NE', 'DtEmissaoNe', 'TIMESTAMP' , 'NOTAS_FISCAIS_LIQUID', 'DT_EMISSAO_NE', true, 16, null);
		$this->addForeignPrimaryKey('NU_NOTA_EMPENHO', 'NuNotaEmpenho', 'VARCHAR' , 'NOTAS_FISCAIS_LIQUID', 'NU_NOTA_EMPENHO', true, 8, null);
		$this->addForeignPrimaryKey('TP_NF_LIQ', 'TpNfLiq', 'CHAR' , 'NOTAS_FISCAIS_LIQUID', 'TP_NF_LIQ', true, 1, null);
		$this->addForeignPrimaryKey('NU_NF_LIQ', 'NuNfLiq', 'VARCHAR' , 'NOTAS_FISCAIS_LIQUID', 'NU_NF_LIQ', true, 8, null);
		$this->addColumn('DT_ESTORNO_EL', 'DtEstornoEl', 'TIMESTAMP', true, 16, null);
		$this->addColumn('DT_REF_EL', 'DtRefEl', 'INTEGER', true, 4, null);
		$this->addColumn('NM_ASSESSOR_EL', 'NmAssessorEl', 'VARCHAR', true, 40, null);
		$this->addColumn('DE_JUSTIFICATIVA_EL', 'DeJustificativaEl', 'VARCHAR', true, 255, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('NotasFiscaisLiquid', 'NotasFiscaisLiquid', RelationMap::MANY_TO_ONE, array('cd_orgao' => 'cd_orgao', 'cd_unid_orc' => 'cd_unid_orc', 'dt_emissao_ne' => 'dt_emissao_ne', 'dt_versao_orc' => 'dt_versao_orc', 'nu_nf_liq' => 'nu_nf_liq', 'nu_nota_empenho' => 'nu_nota_empenho', 'tp_nf_liq' => 'tp_nf_liq', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // EstornosLiquidTableMap
